<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blcultra.dao.PatentFeatureWordMapper" >
  <resultMap id="BaseResultMap" type="com.blcultra.model.PatentFeatureWord" >
    <id column="fid" property="fid" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="corewords" property="corewords" jdbcType="VARCHAR" />
    <result column="featurewords" property="featurewords" jdbcType="VARCHAR" />
    <result column="extendcoreword" property="extendcoreword" jdbcType="VARCHAR" />
    <result column="extendfeatureword" property="extendfeatureword" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    fid, pid, corewords, featurewords, extendcoreword, extendfeatureword
  </sql>

  <select id="selectByPid" parameterType="java.lang.String" resultType="map">
    select
    <include refid="Base_Column_List" />
    from patent_feature_word
    where pid = #{pid,jdbcType=VARCHAR}
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from patent_feature_word
    where fid = #{fid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from patent_feature_word
    where fid = #{fid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.blcultra.model.PatentFeatureWord" >
    insert into patent_feature_word (fid, pid, corewords, 
      featurewords, extendcoreword, extendfeatureword
      )
    values (#{fid,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{corewords,jdbcType=VARCHAR}, 
      #{featurewords,jdbcType=VARCHAR}, #{extendcoreword,jdbcType=VARCHAR}, #{extendfeatureword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blcultra.model.PatentFeatureWord" >
    insert into patent_feature_word
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        fid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="corewords != null" >
        corewords,
      </if>
      <if test="featurewords != null" >
        featurewords,
      </if>
      <if test="extendcoreword != null" >
        extendcoreword,
      </if>
      <if test="extendfeatureword != null" >
        extendfeatureword,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fid != null" >
        #{fid,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="corewords != null" >
        #{corewords,jdbcType=VARCHAR},
      </if>
      <if test="featurewords != null" >
        #{featurewords,jdbcType=VARCHAR},
      </if>
      <if test="extendcoreword != null" >
        #{extendcoreword,jdbcType=VARCHAR},
      </if>
      <if test="extendfeatureword != null" >
        #{extendfeatureword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blcultra.model.PatentFeatureWord" >
    update patent_feature_word
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="corewords != null" >
        corewords = #{corewords,jdbcType=VARCHAR},
      </if>
      <if test="featurewords != null" >
        featurewords = #{featurewords,jdbcType=VARCHAR},
      </if>
      <if test="extendcoreword != null" >
        extendcoreword = #{extendcoreword,jdbcType=VARCHAR},
      </if>
      <if test="extendfeatureword != null" >
        extendfeatureword = #{extendfeatureword,jdbcType=VARCHAR},
      </if>
    </set>
    where fid = #{fid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blcultra.model.PatentFeatureWord" >
    update patent_feature_word
    set pid = #{pid,jdbcType=VARCHAR},
      corewords = #{corewords,jdbcType=VARCHAR},
      featurewords = #{featurewords,jdbcType=VARCHAR},
      extendcoreword = #{extendcoreword,jdbcType=VARCHAR},
      extendfeatureword = #{extendfeatureword,jdbcType=VARCHAR}
    where fid = #{fid,jdbcType=VARCHAR}
  </update>
</mapper>